{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SA4BA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAClCC,EAAe,CAACL,WAAUC,SAEhC,OAAO,IAAIK,SAAQ,SAACC,EAASC,GACrBN,EACFK,EAAQF,GAERG,EAAOH,E,IAlCEI,SAASC,cAAc,SAC/BC,iBAAiB,UAExB,SAAsBC,GACpBA,EAAEC,iBAMF,IAJA,IAAIC,EAAQC,OAAOH,EAAEI,cAAcf,MAAMgB,OACrCC,EAAOH,OAAOH,EAAEI,cAAcE,KAAKD,OACnCE,EAASJ,OAAOH,EAAEI,cAAcG,OAAOF,OAElCG,EAAW,EAAGA,GAAYD,EAAQC,GAAY,EACrDrB,EAAcqB,EAAUN,GACvBO,MAAK,SAAAC,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MACjBsB,YAAW,WACTC,EAAA3B,GAAS4B,OAAOC,QAAQ,uBAAwCC,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,GACrEA,E,IAEJ2B,OAAM,SAAAN,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MAClBsB,YAAW,WACTC,EAAA3B,GAAS4B,OAAOI,QAAQ,sBAAqCF,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,GAClEA,E,IAEPa,GAASI,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\nformEl.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  let delay = Number(e.currentTarget.delay.value);\n  let step = Number(e.currentTarget.step.value);\n  let amount = Number(e.currentTarget.amount.value);\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n    .then(({ position, delay }) => {\n      setTimeout(() => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      }, delay)\n    })\n    .catch(({ position, delay }) => { \n      setTimeout(() => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      }, delay) \n    });\n  delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  let promiseValue = {position, delay};\n\nreturn new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve(promiseValue);\n    } else {\n      reject(promiseValue);\n    }\n  })\n}"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","promiseValue","Promise","resolve","reject","document","querySelector","addEventListener","e","preventDefault","delay1","Number","currentTarget","value","step","amount","position1","then","param","setTimeout","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.08f0f4f9.js.map"}